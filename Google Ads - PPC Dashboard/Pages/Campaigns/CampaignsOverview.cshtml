@page
@model Google_Ads___PPC_Dashboard.Pages.Campaigns.CampaignsOverviewModel

@{
    ViewData["Title"] = "CampaignsOverview";
}

<h1>Campaigns</h1>

<div class="container-fluid">
    <div class="row">
        <div class="d-flex p-3 bg-primary text-white">
            <div class="form-group">
                <label for="usr">Name</label>
                <input type="text" class="form-control" placeholder="Search" id="usr">
            </div>
            <div class="form-group">
                <label for="sel1">Sort By</label>
                <select class="form-control" placeholder="Sort BY" id="sel1">
                    <option>Budget</option>
                    <option>Most Ads</option>
                    <option>Profit</option>
                    <option>Click Through Rate</option>
                    <option>Conversion Rate</option>
                </select>
            </div>
            <br />
        </div>
    </div>
    <div class="row">
        <div class="col-6 bg-info" style="height: 80vh; overflow-y: auto;">
            <h4>Campaigns</h4>
            @foreach (var item in Model.Campaigns)
            {
                var totalAds = item.GetNumberOfAds();
                var rOAS = item.GetROAS();

                <a asp-page="./Details" asp-route-id="@item.Id" class="productbox-link">
                    <div class="Productbox" onclick="">
                        <div class="Pinfo">
                            @Html.DisplayFor(modelItem => item.Name)
                            <br />
                            <label>Budget @Html.DisplayFor(modelItem => item.Budget) Kr</label>
                            <br />
                            <label>Ads @totalAds St</label>
                            <br />
                            <label>ROAS - @rOAS</label>
                        </div>
                    </div>
                </a>
            }
        </div>
        <div class="col-6">
            <div class="row">
                <div class="col-6">
                    <h1>Bra att veta</h1>
                    <br />
                    <h3>Conversions - @Model.AllConversions st</h3>
                    <br />
                    <h3>Avg ROAS - @Model.AvgROAS kr</h3>
                </div>
                <div class="col-6">
                    <div class="p-3 bg-light">
                        <canvas id="myPieChart" width="200" height="100"></canvas>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="p-3 bg-light col-span-2">
                    <canvas id="myLineChart2" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


@{
    var chartLabels = Model.Campaigns.Select(c => c.Name).ToArray();
    var chartData = Model.Campaigns.Select(c => c.Budget).ToArray();
}
<script>
    var ctx = document.getElementById('myPieChart').getContext('2d');
    var myPieChart = new Chart(ctx, {
        type: 'pie', // You can change this to 'line', 'pie', etc.
        data: {
            labels: @Html.Raw(Json.Serialize(chartLabels)),  // Dynamically pass campaign names as labels
            datasets: [{
                label: 'Campaign Budget',
                data: @Html.Raw(Json.Serialize(chartData)),  // Dynamically pass campaign budgets as data
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {



            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>

@{
    // Prepare labels (shared across all campaigns)
    var labels2 = Model.campaignPerformances.Select(cp => cp.Date.ToString("MMM dd")).Distinct().ToArray();

    // Prepare a dynamic list to hold datasets
    var datasets = new List<object>();

    var colors = new[] { "#FF6384", "#36A2EB", "#FFCE56", "#4BC0C0", "#9966FF" }; // List of colors

    // Loop through each campaign to create the dataset for each one
    foreach (var campaign in Model.Campaigns)
    {
        var dataset = new
        {
            label = "Campaign " + campaign.Id, // Label for the campaign
            data = Model.campaignPerformances
                        .Where(cp => cp.CampaignId == campaign.Id)
                        .Select(cp => cp.Clicks)
                        .ToArray(), // Conversion data for the campaign
            borderColor = "#" + (campaign.Id * 123456).ToString("X6"), // Generate unique color for each campaign
            // borderColor = colors[campaign.Id % colors.Length], // Cycle through predefined colors
            fill = false
        };

        datasets.Add(dataset); // Add each dataset to the list
    }
}

<script>
    console.log("Labels:", @Html.Raw(Json.Serialize(labels2)));
    console.log("Datasets:", @Html.Raw(Json.Serialize(datasets)));
    var ctx2 = document.getElementById('myLineChart2').getContext('2d');
    var myLineChart2 = new Chart(ctx2, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(labels2)),  // Pass labels
            datasets: @Html.Raw(Json.Serialize(datasets))  // Pass dynamically generated datasets
            },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            plugins: {
                legend: {
                    display: false
                }
            }
        }
    });
</script>
